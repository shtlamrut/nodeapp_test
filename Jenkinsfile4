pipeline {
  agent {
    kubernetes {
      // this label will be the prefix of the generated pod's name
      label 'jenkins-agent-my-app'
      yaml """
apiVersion: v1
kind: Pod
//metadata:
  //labels:
    //component: ci
spec:
  containers:
    - name: docker
      image: docker
      command:
        - cat
      tty: true
      volumeMounts:
        - mountPath: /var/run/docker.sock
          name: docker-sock
    - name: kubectl
      image: lachlanevenson/k8s-kubectl:v1.14.0 # use a version that matches your K8s version
      command:
        - cat
      tty: true
  volumes:
    - name: docker-sock
      hostPath:
        path: /var/run/docker.sock
"""
    }
  }

  stages {
    stage('Build image') {
      environment {
        DOCKERHUB_CREDS = credentials('dockerhublogin')
      }
      steps {
        container('docker') {
          sh "docker build -t shtlamrut/nodeapp:latest ."
          sh "docker login --username $DOCKERHUB_CREDS_USR --password $DOCKERHUB_CREDS_PSW" 
          sh "docker push shtlamrut/nodeapp:latest"
        }
      }
    }

    stage('Deploy') {
      steps {
        container('kubectl') {
          sh "kubectl apply -f hello-world-deployment.yaml"
          //sh "kubectl apply -f ./kubernet/deployment.yaml"
          //sh "kubectl apply -f ./kubernetes/service.yaml"
        }
      }
    }
  }
}
